1,建立一个maven web 工程，file--> new --> project-->create from archtype -->
  org.apache.maven.archtypes:maven-archtype-webapp
2,pom 文件中加入spring-webmvc jar包的依赖。
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-webmvc</artifactId>
<version>${spring.version}</version>
</dependency>
3，web.xml 配置DispatchServlet:org.springframework.web.servlet.DispatcherServlet
<servlet>
<servlet-name>dispatcherServlet</servlet-name>
<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<init-param>
<param-name>contextConfigLocation</param-name>
<param-value>classpath:springmvc/application.xml</param-value>
</init-param>
<!--当前应用被加载的时候，即初始化dispatchServlet 的时候就进行创建-->
<load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
<servlet-name>dispatcherServlet</servlet-name>
<url-pattern>/</url-pattern>
</servlet-mapping>


4，配置handler。
@Controller
public class Helloworld
{
/**
* 使用@RequestMapping 处理请求的URL
* @return
*/
@RequestMapping("/helloworld.do")
public String helloworld()
{
System.out.println("hello,world");
return "success";
}
}


5,配置application.xml。
主要有自动扫描的包，以及视图解析器。
<context:component-scan base-package="com.sydney.dream" />
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
<property name="prefix" value="/WEB-INF/views/"></property>
<property name="suffix"  value=".jsp" ></property>
</bean>